classdef SetPipInfoPanel < handle
    %SETPIPINFOPANEL Summary of this class goes here
    %   Detailed explanation goes here
    
    properties
        hPanel
        hParent
        pipInfoHandle
        controlObj
        
        multiSelectBG
        singlePipRadio
        multiPipRadio
        
        pipLengthText
        radius_outText
        radius_inText
        materialText
        velocityPText
        velocitySText
        pipSegmentsText
        
        pipLengthEdit
        radius_outEdit
        radius_inEdit
        materialEdit
        velocityPEdit
        velocitySEdit
        pipSegmentsEdit
        
        multiPipSetButton
        multiPipSetFig
        
        modeSelected
    end
    
    properties(Dependent)
        pipLength
        radius_out
        radius_in
        material
        velocityP
        velocityS
        pipSegments
    end
    
    events
        modeChanged
    end
    
    methods
        function obj = SetPipInfoPanel(figParent, pipInfoHandle)
            obj.hParent = figParent;
            obj.pipInfoHandle = pipInfoHandle;
            obj.addlistener('modeChanged', @mode_active_callback);
            obj.buildUI();
            obj.controlObj = obj.makeController();
            obj.attachToControl(obj.controlObj);
            obj.updateView();
        end
        
        function buildUI(obj)
            obj.hPanel = uiextras.Panel(...
                'Parent', obj.hParent, ...
                'Title', 'Pip Information', ...
                'Visible', 'off');
            
            mainLayout = uiextras.HBox(...
                'Parent', obj.hPanel, ...
                'Padding', 10);
            
            obj.multiSelectBG = uibuttongroup(...
                'Visible','off',...
                'Parent', mainLayout, ...
                'SelectionChangedFcn', @buttongroup_selection);
            obj.singlePipRadio = uicontrol(...
                'Parent', obj.multiSelectBG, ...
                'Style', 'radiobutton', ...
                'String', 'Single Pip', ...
                'Position', [10 300 1000 150], ...
                'Units', 'normalized');
            obj.multiPipRadio = uicontrol(...
                'Parent', obj.multiSelectBG, ...
                'Style', 'radiobutton', ...
                'String', 'Multi Pip', ...
                'Position', [10 50 1000 150], ...
                'Units', 'normalized');
            obj.multiSelectBG.Visible = 'on';
            
            function buttongroup_selection(~, eventdata)
                obj.modeSelected = eventdata.NewValue.String;
            end
            
            rightLayout = uiextras.Grid(...
                'Parent', mainLayout, ...
                'Padding', 10);
            obj.pipLengthText = uicontrol(...
                'Parent', rightLayout, ...
                'Style', 'text', ...
                'String', 'Pip Length', ...
                'FontSize', 9);
            obj.radius_outText = uicontrol(...
                'Parent', rightLayout, ...
                'Style', 'text', ...
                'String', 'Outer Radius', ...
                'FontSize', 9);
            obj.radius_inText = uicontrol(...
                'Parent', rightLayout, ...
                'Style', 'text', ...
                'String', 'Inner Radius', ...
                'FontSize', 9);
            obj.velocityPText = uicontrol(...
                'Parent', rightLayout, ...
                'Style', 'text', ...
                'String', 'Longitude Wave Velocity', ...
                'FontSize', 9);
            obj.velocitySText = uicontrol(...
                'Parent', rightLayout, ...
                'Style', 'text', ...
                'String', 'Shear Wave Velocity', ...
                'FontSize', 9);
            obj.materialText = uicontrol(...
                'Parent', rightLayout, ...
                'Style', 'text', ...
                'String', 'Pip Material', ...
                'FontSize', 9);
            obj.pipSegmentsText = uicontrol(...
                'Parent', rightLayout, ...
                'Style', 'text', ...
                'String', 'Pip Segments', ...
                'FontSize', 9);
            
            obj.pipLengthEdit = uicontrol(...
                'Parent', rightLayout, ...
                'Style', 'edit', ...
                'Tag', 'single');
            obj.radius_outEdit = uicontrol(...
                'Parent', rightLayout, ...
                'Style', 'edit', ...
                'Tag', 'single');
            obj.radius_inEdit = uicontrol(...
                'Parent', rightLayout, ...
                'Style', 'edit', ...
                'Tag', 'single');
            obj.velocityPEdit = uicontrol(...
                'Parent', rightLayout, ...
                'Style', 'edit', ...
                'Tag', 'single');
            obj.velocitySEdit = uicontrol(...
                'Parent', rightLayout, ...
                'Style', 'edit', ...
                'Tag', 'single');
            obj.materialEdit = uicontrol(...
                'Parent', rightLayout, ...
                'Style', 'edit', ...
                'Tag', 'single');
            obj.pipSegmentsEdit = uicontrol(...
                'Parent', rightLayout, ...
                'Style', 'edit', ...
                'Tag', 'multi');
            
            uiextras.Empty('Parent', rightLayout);
            uiextras.Empty('Parent', rightLayout);
            uiextras.Empty('Parent', rightLayout);
            uiextras.Empty('Parent', rightLayout);
            obj.multiPipSetButton = uicontrol(...
                'Parent', rightLayout, ...
                'Style', 'pushbutton', ...
                'String', 'Set', ...
                'Tag', 'multi');
            
            set(rightLayout, ...
                'RowSizes', [25 25 25 25 25 25 25], ...
                'ColumnSizes', [120 150 120], ...
                'Spacing', 5);
            set(mainLayout, 'Sizes', [-1 -3], 'Spacing', 10);
            obj.hPanel.Visible = 'on';
            obj.modeSelected = obj.multiSelectBG.SelectedObject.String;
        end
        
        function updateView(obj)
            switch obj.pipInfoHandle.multiPip
                case false
                    set(obj.pipLengthEdit, 'String', ...
                        num2str(obj.pipInfoHandle.pipLength));
                    set(obj.radius_outEdit, 'String', ...
                        num2str(obj.pipInfoHandle.radius_out));
                    set(obj.radius_inEdit, 'String', ...
                        num2str(obj.pipInfoHandle.radius_in));
                    set(obj.velocityPEdit, 'String', ...
                        num2str(obj.pipInfoHandle.velocityP));
                    set(obj.velocitySEdit, 'String', ...
                        num2str(obj.pipInfoHandle.velocityS));
                    set(obj.materialEdit, 'String', ...
                        obj.pipInfoHandle.material);
                    set(obj.pipSegmentsEdit, 'String', ...
                        num2str(obj.pipInfoHandle.pipSegments));
                case true
                    set(obj.pipSegmentsEdit, 'String', ...
                        num2str(obj.pipInfoHandle.pipSegments));
                    obj.multiSelectBG.SelectedObject = obj.multiPipRadio;
                    obj.modeSelected = obj.multiPipRadio.String;
                otherwise
                    return
            end;
        end
        
        function result = get.pipLength(obj)
            result = get(obj.pipLengthEdit, 'String');
            result = str2double(result);
        end
        function result = get.radius_out(obj)
            result = get(obj.radius_outEdit, 'String');
            result = str2double(result);
        end
        function result = get.radius_in(obj)
            result = get(obj.radius_inEdit, 'String');
            result = str2double(result);
        end
        function result = get.velocityP(obj)
            result = get(obj.velocityPEdit, 'String');
            result = str2double(result);
        end
        function result = get.velocityS(obj)
            result = get(obj.velocitySEdit, 'String');
            result = str2double(result);
        end
        function result = get.material(obj)
            result = get(obj.materialEdit, 'String');
        end
        function result = get.pipSegments(obj)
            result = get(obj.pipSegmentsEdit, 'String');
            result = str2double(result);
        end
        
        function set.modeSelected(obj, modeSelected)
            obj.modeSelected = modeSelected;
            obj.notify('modeChanged')
        end
        
        function mode_active_callback(obj, ~)
            attr_single = findobj('Tag', 'single');
            attr_multi = findobj('Tag', 'multi');
            switch obj.modeSelected
                case obj.singlePipRadio.String
                    for ii = 1: numel(attr_single)
                        attr_single(ii).Enable = 'on';
                    end
                    for ii = 1: numel(attr_multi)
                        attr_multi(ii).Enable = 'off';
                    end
                case obj.multiPipRadio.String
                    for ii = 1: numel(attr_single)
                        attr_single(ii).Enable = 'off';
                    end
                    for ii = 1: numel(attr_multi)
                        attr_multi(ii).Enable = 'on';
                    end
                otherwise
                    return
            end
        end
        
        function controlObj = makeController(obj)
            controlObj = ...
                SetInfoModule.SetPipInfoControl(obj, obj.pipInfoHandle);
        end
        
        function attachToControl(obj, controller)
            funcH = @controller.multipip_set_callback;
            set(obj.multiPipSetButton, 'callback', funcH);
        end
    end
    
end

